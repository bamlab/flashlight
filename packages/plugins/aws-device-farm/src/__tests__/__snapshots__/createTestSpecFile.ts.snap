// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`createTestSpecFile creates a test spec for a given test command 1`] = `
"version: 0.1
android_test_host: amazon_linux_2
phases:
  install:
    commands:
      - devicefarm-cli use node 18
      - node -v
      - echo "Navigate to test package directory"
      - cd $DEVICEFARM_TEST_PACKAGE_PATH
      - npm install *.tgz
      - export APPIUM_VERSION=1.22.2
      - avm $APPIUM_VERSION
      - >-
        ln -s /usr/local/avm/versions/$APPIUM_VERSION/node_modules/.bin/appium
        /usr/local/avm/versions/$APPIUM_VERSION/node_modules/appium/bin/appium.js
      - npm install --global yarn
  pre_test:
    commands:
      - echo "Start appium server"
      - >-
        appium --log-timestamp --default-capabilities "{\\"deviceName\\":
        \\"$DEVICEFARM_DEVICE_NAME\\",
        \\"platformName\\":\\"$DEVICEFARM_DEVICE_PLATFORM_NAME\\",\\"app\\":\\"$DEVICEFARM_APP_PATH\\",
        \\"udid\\":\\"$DEVICEFARM_DEVICE_UDID\\",
        \\"platformVersion\\":\\"$DEVICEFARM_DEVICE_OS_VERSION\\",\\"chromedriverExecutable\\":\\"$DEVICEFARM_CHROMEDRIVER_EXECUTABLE\\"}"
        >> $DEVICEFARM_LOG_DIR/appiumlog.txt 2>&1 &
      - |-
        start_appium_timeout=0;
        while [ true ];
        do
            if [ $start_appium_timeout -gt 60 ];
            then
                echo "appium server never started in 60 seconds. Exiting";
                exit 1;
            fi;
            grep -i "Appium REST http interface listener started on 0.0.0.0:4723" $DEVICEFARM_LOG_DIR/appiumlog.txt >> /dev/null 2>&1;
            if [ $? -eq 0 ];
            then
                echo "Appium REST http interface listener started on 0.0.0.0:4723";
                break;
            else
                echo "Waiting for appium server to start. Sleeping for 1 second";
                sleep 1;
                start_appium_timeout=$((start_appium_timeout+1));
            fi;
        done;
  test:
    commands:
      - echo "Navigate to test source code"
      - cd $DEVICEFARM_TEST_PACKAGE_PATH/node_modules/*
      - yarn install --production --ignore-engines
      - echo 'this is the test command'
      - mv result*.json $DEVICEFARM_LOG_DIR
      - mv *.mp4 $DEVICEFARM_LOG_DIR || true
  post_test: {}
artifacts:
  - $DEVICEFARM_LOG_DIR
"
`;

exports[`createTestSpecFile creates a test spec for a single TS file 1`] = `
"version: 0.1
android_test_host: amazon_linux_2
phases:
  install:
    commands:
      - devicefarm-cli use node 18
      - node -v
      - echo "Navigate to test package directory"
      - cd $DEVICEFARM_TEST_PACKAGE_PATH
      - npm install *.tgz
      - export APPIUM_VERSION=1.22.2
      - avm $APPIUM_VERSION
      - >-
        ln -s /usr/local/avm/versions/$APPIUM_VERSION/node_modules/.bin/appium
        /usr/local/avm/versions/$APPIUM_VERSION/node_modules/appium/bin/appium.js
  pre_test:
    commands:
      - echo "Start appium server"
      - >-
        appium --log-timestamp --default-capabilities "{\\"deviceName\\":
        \\"$DEVICEFARM_DEVICE_NAME\\",
        \\"platformName\\":\\"$DEVICEFARM_DEVICE_PLATFORM_NAME\\",\\"app\\":\\"$DEVICEFARM_APP_PATH\\",
        \\"udid\\":\\"$DEVICEFARM_DEVICE_UDID\\",
        \\"platformVersion\\":\\"$DEVICEFARM_DEVICE_OS_VERSION\\",\\"chromedriverExecutable\\":\\"$DEVICEFARM_CHROMEDRIVER_EXECUTABLE\\"}"
        >> $DEVICEFARM_LOG_DIR/appiumlog.txt 2>&1 &
      - |-
        start_appium_timeout=0;
        while [ true ];
        do
            if [ $start_appium_timeout -gt 60 ];
            then
                echo "appium server never started in 60 seconds. Exiting";
                exit 1;
            fi;
            grep -i "Appium REST http interface listener started on 0.0.0.0:4723" $DEVICEFARM_LOG_DIR/appiumlog.txt >> /dev/null 2>&1;
            if [ $? -eq 0 ];
            then
                echo "Appium REST http interface listener started on 0.0.0.0:4723";
                break;
            else
                echo "Waiting for appium server to start. Sleeping for 1 second";
                sleep 1;
                start_appium_timeout=$((start_appium_timeout+1));
            fi;
        done;
  test:
    commands:
      - echo "Navigate to test source code"
      - cd $DEVICEFARM_TEST_PACKAGE_PATH/node_modules/*
      - >-
        echo Y29uc29sZS5sb2coImlzIHRoaXMgYSB0ZXN0PyIpOwo= | base64 -d  >
        runTest.ts
      - npx ts-node runTest.ts
      - mv result*.json $DEVICEFARM_LOG_DIR
      - mv *.mp4 $DEVICEFARM_LOG_DIR || true
  post_test:
    commands:
      - >-
        curl -X POST -H 'Content-type: application/json' --data
        '{"test":"data"}' https://webhook.com
artifacts:
  - $DEVICEFARM_LOG_DIR
"
`;
